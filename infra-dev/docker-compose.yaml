version: '3.8'

services:

  db:
    image: postgres:15.2-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    # image: oskalov/yatrack-back:latest
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    restart: always
    ports:
     - "8000:8000"
    command: >
      bash -c "python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      gunicorn --bind 0:8000 yatrack.wsgi"
    volumes:
      - static_value:/app/static/
      # - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  # frontend:
  #   image: frontend:latest
  #   volumes:
  #     - ../frontend/:/app/result_build/
  #   depends_on:
  #     - backend

  nginx:
    image: nginx:1.23.4-alpine
    # restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/www/html/static
    depends_on:
      - backend
      # - frontend

volumes:
  postgres_data:
  static_value:
  # media_value:
